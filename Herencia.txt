Introduccion a la Herencia
- Mecanimos con el cual podemos contruir una clases a partir de otra compartiendo codigo entre clases
- public class Hija : Padre
- La Herencia permite reutilizar codigo 
- Nos permite programar contra interfaces
- Polimorfismo

Clases Abstractas
- Clase que no puede ser instanciada y su proposito es servir de clase base para otras clases
- public abstract class Animal
- Ayuda al poliformismo ya que nos permite ejecutar metodos con distintas funcionalidades en funcion de que tipo sea.

Metodos virtuales
- Estos metodos tienen una implementacion default que puede ser sobreescrita

Constructores y Herencia
- Los constructores de los padres se ejecutan antes que el del hijo
- Para definir un constructor padre concreto hay que indicarlo con base

Diferencias entre Clases abstract e interfaces
- Las Clases abstractas no pueden ser instanciadas, contienen propiedades y metodos que pueden o no tener implementacion.
- Las Interfaces solo contienen la firma de los metodos los cuales hay que implementar.
- Diferencias antes de C#:
	- Los abstract pueden ofrecer implementacion por defecto, pueden definir atributos, pueden utilizar el modificador de acceso protected

